---
import { EyeIcon } from "@heroicons/react/solid/esm";
import { ServerIcon } from "@heroicons/react/outline/esm";
import { GetBotForWorkspace } from "../../../../../utils/bot";
import { GetRegions } from "../../../../../utils/global";
import { GetUser } from "../../../../../utils/user";
import { GetWorkspace } from "../../../../../utils/workspace";
import GenericLayout from "../../../../components/GenericLayout.astro";
import Modal from "../../../../components/Modal.astro";
import { parse } from "twemoji-parser";
import WorkspaceLayout from "../../../../components/WorkspaceLayout.astro";
import { APIGuild } from "discord-api-types/v9";

const user = await GetUser(import.meta.env, Astro);

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

if (!user) {
  Astro.redirect(
    `${import.meta.env.PUBLIC_AUTH_URL}/?redirect=${canonicalURL}`
  );
}

const workspaceId = Astro.params.id as string;

const regions = await GetRegions(import.meta.env, Astro);
const workspace = await GetWorkspace(workspaceId, import.meta.env, Astro);
const bot = await GetBotForWorkspace(workspace, import.meta.env, Astro);

if (bot) {
  return Astro.redirect(`/workspaces/${workspaceId}/bot`);
}

const guilds: APIGuild[] = await fetch(
  "https://discord.com/api/v9/users/@me/guilds",
  {
    headers: {
      Authorization: `Bearer ${user.provider_access_token}`,
    },
  }
)
  .then((res) => res.json())
  .then((guilds) =>
    guilds.filter((guild) => (parseInt(guild.permissions) & 0x32) === 0x32)
  );
---

<GenericLayout>
  <script is:inline>
    var tokenVisible = false;

    var toggleToken = () => {
      var token = document.getElementById("token");
      var tokenText = document.getElementById("tokenText");
      token.type = tokenVisible ? "password" : "text";
      tokenText.innerText = tokenVisible ? "Show" : "Hide";
      tokenVisible = !tokenVisible;
    };
  </script>
  <WorkspaceLayout sidebar={{ showLogo: false }}>
    <form
      class="w-full space-y-10"
      action={`${
        import.meta.env.PUBLIC_API_ENDPOINT
      }/api/v1/workspaces/${workspaceId}/bot/create`}
      method="POST"
    >
      <input
        hidden
        class="hidden"
        type="hidden"
        name="redirect"
        value={`${Astro.site}workspaces/${workspaceId}/bot`}
      />
      <div class="grid w-full grid-cols-2 gap-y-7">
        <div class="col-span-full">
          <h1 class="flex w-full gap-2 text-3xl font-bold">Discord Bot</h1><p
            class="text-lg font-semibold text-gray-800 dark:text-gray-300"
          >
            ðŸ‘‹ Thanks for using Astral! It'll only take a minute to create your
            bot.
          </p>
        </div>

        <div class="grid w-full grid-cols-2 col-span-full gap-7">
          <div class="col-span-full">
            <label class="text-sm font-semibold">
              Bot Token <span class="text-sm text-red-500 align-super">*</span>
            </label>
            <div class="flex mt-1 rounded-md shadow-sm">
              <div
                class="relative flex items-stretch flex-grow focus-within:z-10"
              >
                <input
                  type="password"
                  name="token"
                  id="token"
                  required
                  class="block w-full border-gray-300 rounded-none dark:border-none focus:ring-indigo-500 focus:border-indigo-500 dark:bg-black-300 rounded-l-md sm:text-sm"
                  placeholder="Paste your bot token..."
                />
              </div>
              <button
                type="button"
                onclick="toggleToken()"
                class="relative inline-flex items-center px-4 py-2 -ml-px space-x-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-r-md bg-gray-50 dark:bg-black-200 dark:border-none dark:text-white dark:hover:bg-black-400 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"
              >
                <EyeIcon className="w-5 h-5" />
                <span id="tokenText">Show</span>
              </button>
            </div>
          </div>

          <div class="md:col-span-1 col-span-full">
            <label class="text-sm font-semibold">Prefix</label>
            <div class="flex mt-1 rounded-md shadow-sm">
              <div
                class="relative flex items-stretch flex-grow focus-within:z-10"
              >
                <input
                  type="text"
                  name="settings.prefix"
                  id="prefix"
                  required
                  class="block w-full border-gray-300 rounded-md dark:border-none focus:ring-indigo-500 focus:border-indigo-500 dark:bg-black-300 sm:text-sm"
                  value="*"
                />
              </div>
            </div>
          </div>

          <div class="md:col-span-1 col-span-full">
            <label class="text-sm font-semibold">Region</label>
            <div class="mt-1">
              <a
                class="flex justify-center w-full px-3 py-2 text-sm font-semibold text-center text-white rounded-md bg-astral"
                href="#region-modal"
                data-turbolinks="false"
              >
                Select Region
              </a>
            </div>
          </div>

          <div class="col-span-full">
            <label class="text-sm font-semibold">Discord Server</label>
            <div class="mt-1">
              <select
                id="guild"
                name="settings.guild"
                class="block w-full py-2 pl-3 pr-10 mt-1 text-base border-none rounded-md bg-black-200 sm:text-sm"
              >
                {guilds[0] &&
                  guilds.map((guild) => (
                    <option value={guild.id}>{guild.name}</option>
                  ))}
              </select>
            </div>
          </div>

          <div class="flex col-span-full">
            <button
              type="submit"
              class="transition-colors duration-100 rounded-lg bg-astral text-white hover:bg-astral-600 px-4 py-2.5 text-sm font-bold"
            >
              Create Bot
            </button>
          </div>
        </div>
      </div>

      <Modal
        id="region-modal"
        title="Select Region"
        Icon={ServerIcon}
        type="success"
      >
        <div
          class="grid grid-cols-1 gap-px mb-2 dark:bg-black-300 md:grid-cols-2"
        >
          {regions.map((region, i) => (
            <label for={region.id} class="cursor-pointer">
              <input
                type="radio"
                name="region"
                id={region.id}
                hidden
                class="hidden peer"
                value={region.id}
              />
              <div
                class:list={[
                  "flex flex-col h-full items-center py-4 peer-checked:bg-black-500 justify-center dark:bg-black-400",
                  {
                    "md:rounded-tl-md md:rounded-tr-none rounded-t-md": i === 0,
                  },
                  {
                    "md:rounded-tr-md": i === 1,
                  },
                  {
                    "md:rounded-bl-md": i === regions.length - 2,
                  },
                  {
                    "md:rounded-br-md md:rounded-bl-none rounded-b-md":
                      i === regions.length - 1,
                  },
                ]}
              >
                <img
                  draggable="false"
                  class="w-10 h-10"
                  alt={region.flag}
                  src={parse(region.flag)[0].url}
                />
                <p class="text-sm font-semibold text-gray-800 dark:text-white">
                  {region.prettyName}
                </p>
                <p class="text-xs text-gray-800 dark:text-white">
                  {region.country}
                </p>
                <p class="text-xs text-gray-800 dark:text-white">
                  {region.bots} / {region.maxBots} Bots
                </p>
              </div>
            </label>
          ))}
        </div>
        <a
          class="flex justify-center w-full px-3 py-2 text-sm font-semibold text-center text-white rounded-md bg-astral"
          href="#"
          data-turbolinks="false"
        >
          Close
        </a>
      </Modal>
    </form>
  </WorkspaceLayout>
</GenericLayout>
