---
import { CloudUploadIcon } from "@heroicons/react/outline/esm";
import GenericLayout from "./GenericLayout.astro";
import WorkspaceLayout from "./WorkspaceLayout.astro";

// remove empty values from array
const removeEmpty = (arr): any[] => arr.filter((item) => item);

const page = new URL(Astro.canonicalURL);
const workspaceId = Astro.params.id || "";

const tabs = [
  {
    name: "General",
    href: `/workspaces/${workspaceId}/bot`,
    selected: page.pathname === `/workspaces/${workspaceId}/bot/`,
  },
  {
    name: "Modules",
    href: `/workspaces/${workspaceId}/bot/modules`,
    selected: page.pathname === `/workspaces/${workspaceId}/bot/modules/`,
  },
  {
    name: "Custom Commands",
    href: `/workspaces/${workspaceId}/bot/commands`,
    selected: page.pathname === `/workspaces/${workspaceId}/bot/commands/`,
  },
  {
    name: "Settings",
    href: `/workspaces/${workspaceId}/bot/settings`,
    selected: page.pathname === `/workspaces/${workspaceId}/bot/settings/`,
  },
];
---

<GenericLayout>
  <WorkspaceLayout sidebar={{ showLogo: false }}>
    <form
      class="w-full space-y-10"
      action={`${
        import.meta.env.PUBLIC_API_ENDPOINT
      }/api/v1/workspaces/${workspaceId}/bot`}
      method="POST"
    >
      <div class="flex justify-between w-full">
        <div>
          <h1 class="flex w-full gap-2 text-3xl font-bold">Discord Bot</h1><p
            class="text-lg font-semibold text-gray-800 dark:text-gray-300"
          >
            Configure your Discord Bot here.
          </p>
        </div>
        <div class="flex items-center h-full">
          <button
            type="submit"
            class="flex px-3 py-2 font-bold rounded-md gap-x-2 bg-astral"
          >
            <CloudUploadIcon className="w-6 h-6" />
            Save Changes
          </button>
        </div>
      </div>
      <div
        class="flex justify-center w-full py-2 align-middle rounded-lg bg-gray-50 dark:bg-black-300"
      >
        <div class="w-full px-2 sm:hidden">
          <label for="tabs" class="sr-only">Select a tab</label><select
            id="tabs"
            name="tabs"
            class="block w-full border-gray-300 rounded-md dark:bg-black-200 dark:border-none focus:ring-indigo-500 focus:border-indigo-500"
          >
            <option value="general" selected>General</option>
            <option value="modules"> Modules</option>
            <option value="custom-commands">Custom Commands</option>
            <option value="settings">Settings</option>
          </select>
        </div>
        <div class="hidden sm:block">
          <nav class="flex space-x-4" aria-label="Tabs">
            {tabs.map((tab) => (
              <a
                href={tab.href}
                class={`px-3 py-2 text-sm font-medium transition-colors duration-100 rounded-md ${
                  tab.selected ? "bg-gray-100 text-gray-700" : "text-white"
                }`}
                aria-current="page"
              >
                {tab.name}
              </a>
            ))}
          </nav>
        </div>
      </div>

      <slot></slot>
    </form>
  </WorkspaceLayout>
</GenericLayout>
